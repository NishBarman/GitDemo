package stepDefinations;

import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.List;

import pojo.Location;
import pojo.addPlace;
import resources.TestDataBuild;
import resources.Utils;
import io.cucumber.java.PendingException;
import io.cucumber.java.en.And;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import io.restassured.RestAssured;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.builder.ResponseSpecBuilder;
import io.restassured.http.ContentType;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import io.restassured.specification.ResponseSpecification;

public class stepDefination extends Utils {
	 RequestSpecification res;
	 ResponseSpecification resspec;
	 Response response;
	 TestDataBuild data=new TestDataBuild();
	   @Given("^Add place Payload$")
	    public void add_place_payload() throws Throwable {
		  
		   res=given().spec(requestSpecification()).body(data.addPlacePayLoad());
	    }

	    @When("^User calls \"([^\"]*)\" with Post http request$")
	    public void user_calls_something_with_post_http_request(String strArg1) throws Throwable {
	    	
	    	resspec=new ResponseSpecBuilder().expectStatusCode(200).expectContentType(ContentType.JSON).build();
			   response=res.when().post("/maps/api/place/add/json").then().spec(resspec).extract().response();
	    }

	    @Then("the API call got success with status code {int}")
		public void the_API_call_got_success_with_status_code(Integer int1) {
		    // Write code here that turns the phrase above into concrete actions
			assertEquals(response.getStatusCode(),200);
	    }

	    @And("{string} in response body is {string}")
	    public void something_in_response_body_is_something(String keyValue, String ExpectedValue) throws Throwable {
	        String resp=response.asString();
	        JsonPath js=new JsonPath(resp);
	        assertEquals(js.get(keyValue).toString(),ExpectedValue);
	        
	    }

	    
			 
		    
		
	}

